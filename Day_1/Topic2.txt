Topic 2: Setting Up Rest Assured for API Testing
Subtopic a: Dependencies Installation â€“ Adding Rest Assured with Maven/Gradle
=============================================================================
ðŸ”¹ What is Rest Assured?

A Java library for automating REST API testing.
Works with JUnit/TestNG for test execution.
âœ… Adding Rest Assured to Maven (pom.xml)
xml
<dependencies>
    <dependency>
        <groupId>io.rest-assured</groupId>
        <artifactId>rest-assured</artifactId>
        <version>5.3.0</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>7.7.0</version>
        <scope>test</scope>
    </dependency>
</dependencies>


Subtopic b: Writing a Simple GET Request Test using Rest Assured
============================================================================
ðŸ“Œ Example: Test to Fetch Users

import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.testng.Assert;
import org.testng.annotations.Test;

public class ApiTest {
    
    @Test
    public void testGetUsers() {
        Response response = RestAssured
                .given()
                .when()
                .get("https://jsonplaceholder.typicode.com/users");

        System.out.println(response.getBody().asString());

        Assert.assertEquals(response.getStatusCode(), 200);
    }
}

âœ… Explanation:
âœ” RestAssured.given().when().get(URL) â†’ Sends a GET request.
âœ” response.getBody().asString() â†’ Prints the response body.
âœ” Assert.assertEquals(statusCode, 200) â†’ Verifies that the status code is 200 OK.


Subtopic c: Response Validation â€“ Verifying Status Codes & Response Body
=========================================================================================
âœ… Example: Validating Status Code & JSON Response
import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.testng.Assert;
import org.testng.annotations.Test;

public class ApiTest {

    @Test
    public void testGetUserById() {
        Response response = RestAssured
                .given()
                .when()
                .get("https://jsonplaceholder.typicode.com/users/1");

        // Validate Status Code
        Assert.assertEquals(response.getStatusCode(), 200);

        // Validate JSON Response
        String name = response.jsonPath().getString("name");
        Assert.assertEquals(name, "Leanne Graham");

        System.out.println("User Name: " + name);
    }
}

âœ… What This Test Does:
âœ” Sends a GET request to fetch user with ID 1.
âœ” Checks if the status code is 200.
âœ” Extracts the userâ€™s name and verifies it.